{"ast":null,"code":"var _jsxFileName = \"D:\\\\JS\\\\Krisssss\\\\react-course\\\\practice-react-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport UserList from './components/UserList/UserList';\nimport NewUser from './components/NewUser/NewUser';\nimport ErrorModal from './components/ErrorModal/ErrorModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const DUMMY_USERS_DATA = [];\n  const [userData, setUserData] = useState(DUMMY_USERS_DATA);\n  const [isValid, setIsValid] = useState(true);\n  const [validMassage, setValidMassage] = useState('');\n\n  const addNewUserHandler = savedUserData => {\n    setIsValid(true);\n    setUserData(prevUserData => {\n      return [savedUserData, ...prevUserData];\n    });\n  };\n\n  const validCheckHandler = validCheckMassage => {\n    setValidMassage(validCheckMassage);\n    setIsValid(false);\n  };\n\n  const closeErrorModalHandler = () => {\n    setIsValid(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isValid && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      validMassage: validMassage,\n      onCloseErrorModal: closeErrorModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NewUser, {\n      onAddNewUser: addNewUserHandler,\n      onValidCheck: validCheckHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pxVMe9q0REAkE765VkAUfFY0LKM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/JS/Krisssss/react-course/practice-react-project/src/App.js"],"names":["React","useState","UserList","NewUser","ErrorModal","App","DUMMY_USERS_DATA","userData","setUserData","isValid","setIsValid","validMassage","setValidMassage","addNewUserHandler","savedUserData","prevUserData","validCheckHandler","validCheckMassage","closeErrorModalHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,gBAAgB,GAAG,EAAzB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACK,gBAAD,CAAxC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMY,iBAAiB,GAAIC,aAAD,IAAmB;AAC3CJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAF,IAAAA,WAAW,CAAEO,YAAD,IAAkB;AAC5B,aAAO,CAACD,aAAD,EAAgB,GAAGC,YAAnB,CAAP;AACD,KAFU,CAAX;AAGD,GAND;;AAQA,QAAMC,iBAAiB,GAAIC,iBAAD,IAAuB;AAC/CL,IAAAA,eAAe,CAACK,iBAAD,CAAf;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMQ,sBAAsB,GAAG,MAAM;AACnCR,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,eACG,CAACD,OAAD,iBACC,QAAC,UAAD;AACE,MAAA,YAAY,EAAEE,YADhB;AAEE,MAAA,iBAAiB,EAAEO;AAFrB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOE,QAAC,OAAD;AACE,MAAA,YAAY,EAAEL,iBADhB;AAEE,MAAA,YAAY,EAAEG;AAFhB;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAvCQF,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\n\nimport UserList from './components/UserList/UserList'\nimport NewUser from './components/NewUser/NewUser'\nimport ErrorModal from './components/ErrorModal/ErrorModal'\n\nfunction App() {\n  const DUMMY_USERS_DATA = []\n\n  const [userData, setUserData] = useState(DUMMY_USERS_DATA)\n  const [isValid, setIsValid] = useState(true)\n  const [validMassage, setValidMassage] = useState('')\n\n  const addNewUserHandler = (savedUserData) => {\n    setIsValid(true)\n\n    setUserData((prevUserData) => {\n      return [savedUserData, ...prevUserData]\n    })\n  }\n\n  const validCheckHandler = (validCheckMassage) => {\n    setValidMassage(validCheckMassage)\n    setIsValid(false)\n  }\n\n  const closeErrorModalHandler = () => {\n    setIsValid(true)\n  }\n\n  return (\n    <div>\n      {!isValid && (\n        <ErrorModal\n          validMassage={validMassage}\n          onCloseErrorModal={closeErrorModalHandler}\n        />\n      )}\n      <NewUser\n        onAddNewUser={addNewUserHandler}\n        onValidCheck={validCheckHandler}\n      />\n      <UserList userData={userData} />\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}